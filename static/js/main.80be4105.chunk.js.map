{"version":3,"sources":["styles/colors.ts","styles/fonts.ts","components/Button.tsx","reportWebVitals.ts","router/routes.ts","components/TimerClock.tsx","components/TimerDisplay.tsx","models/TimerModel.ts","controllers/TimerController.tsx","layouts/Draggable.tsx","views/TestView.tsx","router/AppRouter.tsx","index.tsx"],"names":["Colors","FontFamilies","FontWeight","ButtonStyles","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ROUTES","test","STYLES","faded","backgroundColor","grey","color","black","bright","green","white","Button","title","style","fullWidth","onClick","StyledButton","styled","button","main","props","TimerClockMode","getHours","time","hours","getUTCHours","getMinutes","minutes","getUTCMinutes","getSeconds","seconds","getUTCSeconds","TimerClockStyles","getTimer","mode","HMS","HM","MS","TimerClock","Container","div","w300","TimerDisplay","clockMode","isRunning","display","width","fontFamily","TimerModel","id","msHasPassed","segmentMsHasPassed","segmentStartedDate","this","Date","currentDate","getTime","getAllPassedMs","TimerController","useState","timerModel","getAllPassedDate","toggleRunning","timerDisplay","setTimerDisplay","render","useCallback","useEffect","tempInterval","setInterval","changeSegment","clearInterval","POSITION","x","y","Draggable","onDrag","onDragEnd","children","isDragging","origin","translation","state","setState","handleMouseDown","clientX","clientY","handleMouseMove","handleMouseUp","window","addEventListener","removeEventListener","styles","useMemo","cursor","transform","zIndex","position","onMouseDown","TestView","range","items","setItems","order","dragOrder","draggedIndex","handleDrag","delta","Math","round","index","indexOf","filter","inRange","length","splice","handleDragEnd","map","draggedTop","top","Wrapper","AppRouter","exact","path","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80be4105.chunk.js","sourcesContent":["export enum Colors {\n  black = '#000000',\n  white = '#FFFFFF',\n  green = '#4FBA55',\n  grey = '#E5E5E5',\n}\n","export enum FontFamilies {\n  main = 'FontMain',\n}\n\nexport enum FontWeight {\n  w100 = '100',\n  w200 = '200',\n  w300 = '300',\n  w400 = '400',\n  w500 = '500',\n  w600 = '600',\n  w700 = '700',\n  w800 = '800',\n}\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nimport { Colors } from '../styles/colors';\nimport { FontFamilies } from '../styles/fonts';\n\nexport enum ButtonStyles {\n  faded = 'faded',\n  bright = 'bright',\n}\n\nconst STYLES = {\n  faded: {\n    backgroundColor: Colors.grey,\n    color: Colors.black,\n  },\n  bright: {\n    backgroundColor: Colors.green,\n    color: Colors.white,\n  },\n};\n\nexport interface ButtonProps {\n  title: string;\n  style?: ButtonStyles,\n  fullWidth?: boolean;\n  onClick: Function;\n}\n\nexport const Button: FC<ButtonProps> = (\n  { title, style = ButtonStyles.faded, fullWidth = false, onClick },\n) => {\n  return (\n    <StyledButton\n      fullWidth={fullWidth}\n      backgroundColor={STYLES[style].backgroundColor}\n      color={STYLES[style].color}\n      onClick={() => onClick()}\n    >\n      {title}\n    </StyledButton>\n  );\n};\n\nconst StyledButton = styled.button<{\n  fullWidth: boolean,\n  backgroundColor: string,\n  color: string,\n}>`\n  font-family: ${FontFamilies.main};\n  width: ${props => props.fullWidth ? '100%' : 'auto'};\n  background-color: ${props => props.backgroundColor};\n  color: ${props => props.color};\n  outline: none;\n`;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const ROUTES = {\n  test: `/timerproject`,\n};\n\nexport default ROUTES;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nimport { Colors } from '../styles/colors';\nimport { FontFamilies, FontWeight } from '../styles/fonts';\n\nconst getHours = (time: Date) => {\n  const hours = time.getUTCHours();\n  return hours < 10 ? `0${hours}` : hours;\n};\n\nconst getMinutes = (time: Date) => {\n  const minutes = time.getUTCMinutes();\n  return minutes < 10 ? `0${minutes}` : minutes;\n};\n\nconst getSeconds = (time: Date) => {\n  const seconds = time.getUTCSeconds();\n  return seconds < 10 ? `0${seconds}` : seconds;\n};\n\nexport enum TimerClockMode {\n  HMS = 'HMS',\n  HM = 'HM',\n  MS = 'MS',\n}\n\nconst getTimer = (mode: TimerClockMode, time: Date) => {\n  switch (mode) {\n    case TimerClockMode.HMS:\n      return getHours(time) + ':' + getMinutes(time) + ':' + getSeconds(time);\n    case TimerClockMode.HM:\n      return getHours(time) + ':' + getMinutes(time);\n    case TimerClockMode.MS:\n      return getMinutes(time) + ':' + getSeconds(time);\n  }\n};\n\nexport enum TimerClockStyles {\n  faded = 'faded',\n  bright = 'bright',\n}\n\nconst STYLES = {\n  faded: { color: Colors.white },\n  bright: { color: Colors.green },\n};\n\nexport interface TimerClockProps {\n  mode: TimerClockMode;\n  time: Date;\n  style?: TimerClockStyles,\n}\n\nexport const TimerClock: FC<TimerClockProps> = (\n  { mode, time, style = TimerClockStyles.faded },\n) => {\n  return (\n    <Container color={STYLES[style].color}>\n      {getTimer(mode, time)}\n    </Container>\n  );\n};\n\nconst Container = styled.div<{ color: string }>`\n  padding: 0 10px;\n  font-family: ${FontFamilies.main};\n  font-weight: ${FontWeight.w300};\n  font-size: 36px;\n  background-color: ${Colors.black};\n  color: ${props => props.color};\n  user-select: none;\n  text-align: center;\n`;\n","import React, { FC } from 'react';\n\nimport { Button, ButtonStyles } from './Button';\nimport { TimerClock, TimerClockMode, TimerClockStyles } from './TimerClock';\nimport { FontFamilies } from '../styles/fonts';\n\nexport interface TimerDisplayProps {\n  clockMode: TimerClockMode;\n  time: Date;\n  isRunning: boolean;\n  onClick: Function;\n}\n\nexport const TimerDisplay: FC<TimerDisplayProps> = (\n  { clockMode, time, isRunning, onClick },\n) => {\n  return (\n    <div style={{ display: 'inline-block' }}>\n\n      <div style={{ display: 'flex' }}>\n        <input style={{ width: '100%', fontFamily: FontFamilies.main }} />\n      </div>\n\n      <div style={{ display: 'flex' }}>\n        <TimerClock\n          mode={clockMode}\n          time={time}\n          style={isRunning ? TimerClockStyles.bright : TimerClockStyles.faded}\n        />\n\n        <Button\n          title={isRunning ? 'PAUSE' : 'START'}\n          style={isRunning ? ButtonStyles.bright : ButtonStyles.faded}\n          fullWidth\n          onClick={() => onClick()}\n        />\n      </div>\n\n    </div>\n  );\n};\n","export class TimerModel {\n  id: number;\n  msHasPassed: number;\n  isRunning: boolean;\n  segmentMsHasPassed: number;\n  segmentStartedDate: Date;\n\n  constructor(id: number) {\n    this.id = id;\n    this.msHasPassed = 0;\n    this.isRunning = false;\n    this.segmentMsHasPassed = 0;\n    this.segmentStartedDate = new Date();\n  }\n\n  toggleRunning() {\n    if (this.isRunning) {\n      this.isRunning = false;\n      this.msHasPassed += this.segmentMsHasPassed;\n      this.segmentMsHasPassed = 0;\n    } else {\n      this.isRunning = true;\n      this.segmentMsHasPassed = 0;\n      this.segmentStartedDate = new Date();\n    }\n  }\n\n  changeSegment(currentDate: Date) {\n    this.segmentMsHasPassed = currentDate.getTime() - this.segmentStartedDate.getTime();\n  }\n\n  getAllPassedMs() {\n    return this.msHasPassed + this.segmentMsHasPassed;\n  }\n\n  getAllPassedDate() {\n    return new Date(this.getAllPassedMs());\n  }\n}\n","import React, { FC, useCallback, useEffect, useState } from 'react';\n\nimport { TimerClockMode } from '../components/TimerClock';\nimport { TimerDisplay } from '../components/TimerDisplay';\nimport { TimerModel } from '../models/TimerModel';\n\nexport interface TimerControllerProps {\n}\n\nexport const TimerController: FC<TimerControllerProps> = () => {\n  const [ timerModel ] = useState(new TimerModel(0));\n  const [ timerDisplay, setTimerDisplay ] = useState(\n    <TimerDisplay\n      clockMode={TimerClockMode.HMS}\n      time={timerModel.getAllPassedDate()}\n      isRunning={timerModel.isRunning}\n      onClick={() => timerModel.toggleRunning()}\n    />,\n  );\n\n  const render = useCallback(() => {\n    setTimerDisplay(\n      <TimerDisplay\n        clockMode={TimerClockMode.HMS}\n        time={timerModel.getAllPassedDate()}\n        isRunning={timerModel.isRunning}\n        onClick={() => timerModel.toggleRunning()}\n      />,\n    );\n  }, [ timerModel ]);\n\n  useEffect(() => {\n    const tempInterval = setInterval(() => {\n      if (timerModel.isRunning) {\n        timerModel.changeSegment(new Date());\n      }\n      render();\n    }, 100);\n    return () => clearInterval(tempInterval);\n  }, [ timerModel, render ]);\n\n  return timerDisplay;\n};\n","import React, { useState, useMemo, useCallback, useEffect, FC, CSSProperties } from 'react';\n\nconst POSITION = { x: 0, y: 0 };\n\nexport interface DraggableProps {\n  id: number;\n  onDrag: Function;\n  onDragEnd: Function;\n  children: React.ReactNode;\n}\n\nexport const Draggable: FC<DraggableProps> = (\n  { id, onDrag, onDragEnd, children },\n) => {\n  const [ state, setState ] = useState({\n    isDragging: false,\n    origin: POSITION,\n    translation: POSITION,\n  });\n\n  const handleMouseDown = useCallback(({ clientX, clientY }) => {\n    setState(state => ({\n      ...state,\n      isDragging: true,\n      origin: { x: clientX, y: clientY },\n    }));\n  }, []);\n\n  const handleMouseMove = useCallback(({ clientX, clientY }) => {\n    const translation = { x: clientX - state.origin.x, y: clientY - state.origin.y };\n\n    setState(state => ({\n      ...state,\n      translation,\n    }));\n\n    onDrag({ translation, id });\n  }, [ state.origin, onDrag, id ]);\n\n  const handleMouseUp = useCallback(() => {\n    setState(state => ({\n      ...state,\n      isDragging: false,\n    }));\n\n    onDragEnd();\n  }, [ onDragEnd ]);\n\n  useEffect(() => {\n    if (state.isDragging) {\n      window.addEventListener('mousemove', handleMouseMove);\n      window.addEventListener('mouseup', handleMouseUp);\n    } else {\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('mouseup', handleMouseUp);\n\n      setState(state => ({\n        ...state,\n        translation: POSITION,\n      }));\n    }\n  }, [ state.isDragging, handleMouseMove, handleMouseUp ]);\n\n  const styles: CSSProperties = useMemo(() => ({\n    cursor: state.isDragging ? '-webkit-grabbing' : '-webkit-grab',\n    transform: `translate(${state.translation.x}px, ${state.translation.y}px)`,\n    zIndex: state.isDragging ? 2 : 1,\n    position: state.isDragging ? 'absolute' : 'relative',\n  }), [ state.isDragging, state.translation ]);\n\n  return (\n    <div style={styles} onMouseDown={handleMouseDown}>\n      {children}\n    </div>\n  );\n};\n","import { inRange, range } from 'lodash';\nimport React, { useCallback, useState } from 'react';\nimport styled from 'styled-components';\n\nimport { Button } from '../components/Button';\nimport { TimerController } from '../controllers/TimerController';\nimport { Draggable } from '../layouts/Draggable';\n\nconst HEIGHT = 80;\n\nexport default function TestView() {\n  const [ items, setItems ] = useState(range(1));\n  const [ state, setState ] = useState({\n    order: items,\n    dragOrder: items,\n    draggedIndex: null,\n  });\n\n  const handleDrag = useCallback(({ translation, id }) => {\n    const delta = Math.round(translation.y / HEIGHT);\n    const index = state.order.indexOf(id);\n    const dragOrder = state.order.filter(index => index !== id);\n\n    if (!inRange(index + delta, 0, items.length)) {\n      return;\n    }\n\n    dragOrder.splice(index + delta, 0, id);\n\n    setState(state => ({\n      ...state,\n      draggedIndex: id,\n      dragOrder,\n    }));\n  }, [ state.order, items.length ]);\n\n  const handleDragEnd = useCallback(() => {\n    setState(state => ({\n      ...state,\n      order: state.dragOrder,\n      draggedIndex: null,\n    }));\n  }, []);\n\n  const addTimer = () => {\n    setItems(items => [ ...items, items.length ]);\n    setState(state => ({\n      ...state,\n      order: [ ...state.order, state.order.length ],\n      dragOrder: [ ...state.dragOrder, state.dragOrder.length ],\n    }));\n  };\n\n  return (\n    <Container>\n      <Button title='Add timer' onClick={() => addTimer()} />\n      <br />\n      <br />\n\n      {items.map(index => {\n        const isDragging = state.draggedIndex === index;\n        const draggedTop = state.order.indexOf(index) * (HEIGHT + 10);\n        const top = state.dragOrder.indexOf(index) * (HEIGHT + 10);\n        return (\n          <Draggable\n            id={index}\n            key={index}\n            onDrag={handleDrag}\n            onDragEnd={handleDragEnd}\n          >\n            <Wrapper top={isDragging ? draggedTop : top}>\n              <TimerController />\n            </Wrapper>\n          </Draggable>\n        );\n      })}\n\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  width: 100vw;\n  min-height: 100vh;\n`;\n\nconst Wrapper = styled.div<{ top: number }>`\n  height: ${HEIGHT}px;\n  user-select: none;\n  display: flex;\n  position: absolute;\n  top: ${props => `${props.top}px`};\n`;\n","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport ROUTES from './routes';\nimport TestView from '../views/TestView';\n\nexport default function AppRouter() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path={ROUTES.test} component={TestView} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport reportWebVitals from './reportWebVitals';\nimport { AppRouter } from './router';\n\nimport './styles/font.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppRouter />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}